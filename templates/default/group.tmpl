package {{ .PackageName }}

import (
  "fmt"
)

func groupBy(src Slicer, selector func(interface{}) TableRowWithPrimary, trs Slicer, groups Slicers) {

  if trs.nxLen() != 0 || (groups != nil && groups.nxLen() != 0) {
    panic(fmt.Errorf("Expect empty slices"))
  }

  prims := make(map[interface{}]int) // PrimaryValue -> index of trs/groups
  for i := 0; i < src.nxLen(); i++ {

    item := src.nxItem(i)
    tr := selector(item)
    
    // Skip null rows.
    if !tr.Valid() {
      continue
    }

    p := tr.PrimaryValue()
    idx, ok := prims[p]
    if !ok {
      // A new PrimaryValue found.
      trs.nxAppend(tr)
      if groups != nil {
        groups.nxAppend()
      }
      idx = trs.nxLen() - 1
      prims[p] = idx
    }

    if groups != nil {
      groups.nxSlicer(idx).nxAppend(item)
    }

  }

}

