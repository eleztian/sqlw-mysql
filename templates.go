// Code generated by "esc -o templates.go templates"; DO NOT EDIT.

package main

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"io/ioutil"
	"net/http"
	"os"
	"path"
	"sync"
	"time"
)

type _escLocalFS struct{}

var _escLocal _escLocalFS

type _escStaticFS struct{}

var _escStatic _escStaticFS

type _escDirectory struct {
	fs   http.FileSystem
	name string
}

type _escFile struct {
	compressed string
	size       int64
	modtime    int64
	local      string
	isDir      bool

	once sync.Once
	data []byte
	name string
}

func (_escLocalFS) Open(name string) (http.File, error) {
	f, present := _escData[path.Clean(name)]
	if !present {
		return nil, os.ErrNotExist
	}
	return os.Open(f.local)
}

func (_escStaticFS) prepare(name string) (*_escFile, error) {
	f, present := _escData[path.Clean(name)]
	if !present {
		return nil, os.ErrNotExist
	}
	var err error
	f.once.Do(func() {
		f.name = path.Base(name)
		if f.size == 0 {
			return
		}
		var gr *gzip.Reader
		b64 := base64.NewDecoder(base64.StdEncoding, bytes.NewBufferString(f.compressed))
		gr, err = gzip.NewReader(b64)
		if err != nil {
			return
		}
		f.data, err = ioutil.ReadAll(gr)
	})
	if err != nil {
		return nil, err
	}
	return f, nil
}

func (fs _escStaticFS) Open(name string) (http.File, error) {
	f, err := fs.prepare(name)
	if err != nil {
		return nil, err
	}
	return f.File()
}

func (dir _escDirectory) Open(name string) (http.File, error) {
	return dir.fs.Open(dir.name + name)
}

func (f *_escFile) File() (http.File, error) {
	type httpFile struct {
		*bytes.Reader
		*_escFile
	}
	return &httpFile{
		Reader:   bytes.NewReader(f.data),
		_escFile: f,
	}, nil
}

func (f *_escFile) Close() error {
	return nil
}

func (f *_escFile) Readdir(count int) ([]os.FileInfo, error) {
	return nil, nil
}

func (f *_escFile) Stat() (os.FileInfo, error) {
	return f, nil
}

func (f *_escFile) Name() string {
	return f.name
}

func (f *_escFile) Size() int64 {
	return f.size
}

func (f *_escFile) Mode() os.FileMode {
	return 0
}

func (f *_escFile) ModTime() time.Time {
	return time.Unix(f.modtime, 0)
}

func (f *_escFile) IsDir() bool {
	return f.isDir
}

func (f *_escFile) Sys() interface{} {
	return f
}

// FS returns a http.Filesystem for the embedded assets. If useLocal is true,
// the filesystem's contents are instead used.
func FS(useLocal bool) http.FileSystem {
	if useLocal {
		return _escLocal
	}
	return _escStatic
}

// Dir returns a http.Filesystem for the embedded assets on a given prefix dir.
// If useLocal is true, the filesystem's contents are instead used.
func Dir(useLocal bool, name string) http.FileSystem {
	if useLocal {
		return _escDirectory{fs: _escLocal, name: name}
	}
	return _escDirectory{fs: _escStatic, name: name}
}

// FSByte returns the named file from the embedded assets. If useLocal is
// true, the filesystem's contents are instead used.
func FSByte(useLocal bool, name string) ([]byte, error) {
	if useLocal {
		f, err := _escLocal.Open(name)
		if err != nil {
			return nil, err
		}
		b, err := ioutil.ReadAll(f)
		_ = f.Close()
		return b, err
	}
	f, err := _escStatic.prepare(name)
	if err != nil {
		return nil, err
	}
	return f.data, nil
}

// FSMustByte is the same as FSByte, but panics if name is not present.
func FSMustByte(useLocal bool, name string) []byte {
	b, err := FSByte(useLocal, name)
	if err != nil {
		panic(err)
	}
	return b
}

// FSString is the string version of FSByte.
func FSString(useLocal bool, name string) (string, error) {
	b, err := FSByte(useLocal, name)
	return string(b), err
}

// FSMustString is the string version of FSMustByte.
func FSMustString(useLocal bool, name string) string {
	return string(FSMustByte(useLocal, name))
}

var _escData = map[string]*_escFile{

	"/templates/default/group.tmpl": {
		local:   "templates/default/group.tmpl",
		size:    830,
		modtime: 1530326882,
		compressed: `
H4sIAAAAAAAC/3RSTWvcMBC961e83UOQycZOr023kEIOhVJCU9JDyEG15XSw9cFYZr1s/N+LLHs/DrkY
S/PmvXlv5FXZqDeNwwH5Y/r/qYzGOApBxjsOkAJY1yasRSZE3dsSb+x6/20vOy7x1FKpeYNOt7oMjhER
kmzQXKtSH8YMv9XfVv9yuz8U/j0yGcX7DQJ3x96JbzlmOAgBUB0huR1+aCszrLa4xfs75IxdbWGpxdXV
3HwBjBQA4JWlUtYm5A/Mjmu5fhi8LgO08WGPLup16ywTwBg1PZPp8HkLoxotjfIvZz5eyYYMRYHZwrNq
e42bryBb6QFumrdI0wigdgyKXLd3IHxBx+Uy4x3o+jq5BChoE2Gp/j1oIymbKoGn+zlXGYGpMH2KAk8N
edi+bcFu1+WJrsYqcP6sWqrkkgNQOhvI9no6jknZR/rA+bkfmRSoGjZwTQRMmbz41yO7a46sRYF7WL27
jKR2va3yGZJ2eO+9tpUMnM3XVONykQslTvucmyy1S9e4dFcDthfP4waf5toyL7YRdu73Q82jYkq/GrJc
zm/xNMYp/oluFGIU4n8AAAD//8prifY+AwAA
`,
	},

	"/templates/default/headnote": {
		local:   "templates/default/headnote",
		size:    103,
		modtime: 1529743910,
		compressed: `
H4sIAAAAAAAC/0TKsRHCMAwF0J4pfgcUWD01I7CAQ4QlzpEJki6X7SnTPyI8RR1v7Qx11IyBxsa/Gjxj
2uFr327L7mvHRSK+fidqGpJTeY2FJKu1T9rGRge9FuAx7BzgWaOc/gEAAP//80UxpWcAAAA=
`,
	},

	"/templates/default/intf.tmpl": {
		local:   "templates/default/intf.tmpl",
		size:    2126,
		modtime: 1531191153,
		compressed: `
H4sIAAAAAAAC/6SVy27rNhCG93qKQTZHSl25L9BFm3YRIA3cJE0XQVHQ0sgiQnEUchTJMPzuBS+65YLi
IDub/Oebf2ZIqhXFszggnE6Q78LvW9EgnM9JIpuWDEOaAFwUpBkHvnC/S8FiLyxu7Yu6SLIk2W7h9wEL
NCAtcI1QUNOQBqkZTSUKBCbAAYuOEQS8dGiO0EuuqWMwyJ3RUh9A6CMY6vOEjy1OxIlxSsAvXgUracED
RFt5XNtEtmUj9WEDwhws5Hk+QU7nDFL7ovI7tJ3iDaAxZLLk7Iv40wV/XxWze0N9arNofiKt3PvVL9u/
9P6pt5P7SL6j/qvwkR0b4to9lvLzOJEfxurmOX1cbtCP7tBE6BWprtH3hdAaDRhsDVrUbEFAQUphwZI0
UOX+dY12sxAMhdCwR7A+rHSZCCpDDYjFmVmj1262W9DDzqDbBdG2qEsLQqk5DUGJlqEiE9JIfcgTmKNS
v3359M+yZcmEJsue3XSWndVCKIUliIpxBvosBJYaBBzYCGgNFWitnbNFUJqF+ca2PYi9wjvq1x1jt/rN
Lnow6dblr1oTTXvpH8giHuNw7Edk4zakrsg0wo3EuZsi0gwupz8R9yiULGeU6RBkBVxL626UgFe/7/HO
L6SYH3LQxHD7181N5vgekWawJ1KRGow/CtXhyqb8kes4O0fuMJ+q9OJUug5ksBjWirgjv/MZ85uFNihm
bgz5kLwe0t+S652RjfBPxDQvVzVVsQXuAYQ2ip7x+GZ+S8R6lKMilhNF7zu0YIcO+dxuHP60hCNQjzFY
RpG07uVrhfEu9zHWuoBlqnTdgFD/vZLFm0s9XjZPs24/Fhq1H9zSG9SrQhTqA9fB/cSAIAw2plt4zdi8
H6l0q6twkGBr6lTpbqqbhNTw9NNmZGYbIK7R9NK6t74VWhbQS6Wc3AhpsQwOXL7PT5oefvG1z++NDl6Y
ll6uq7AqLWipNm5LT/cFm5aPYX92HHijiZAkDYzl23ROkldh/Bf83zePefiM/PZrlmqpsk8FV6T1/0ge
hijIkv8CAAD//wmPM1pOCAAA
`,
	},

	"/templates/default/manifest.json": {
		local:   "templates/default/manifest.json",
		size:    258,
		modtime: 1529741733,
		compressed: `
H4sIAAAAAAAC/2yNSwoCMRBE9zlF0ethDjBXEQlxbH9MPphyITJ3l7TgJ7ireq+SfjhA6hyS572oj6HI
1IHxUnOSoQ1PGvYpU9vmnc0wlkUmtO9aC7vFRhZGk8NLVUbaCUb+COUsEzZWADknHr49IFEZOnS85lvp
GLXyz0v/4Ya3Dljd6p4BAAD//wb8EYkCAQAA
`,
	},

	"/templates/default/meta.tmpl": {
		local:   "templates/default/meta.tmpl",
		size:    10465,
		modtime: 1531276867,
		compressed: `
H4sIAAAAAAAC/+xabW/byPF/r08xIRCfeH+a/udaHAoVuoMv0bUqHNsnywnQIIjW1NJemNpldpeSXZ+/
ezH7QC4pSrbvWhQFmhcxxZ2d5/3NzEolyW7JNYWHB0jP7fMpWVF4fBwM2KoUUsNwABBlgmt6pyN8zlf2
r9KS8WtlnjVb0WiAT9eivL1OGT9ai4JoVlBNs5sjXhVFuv4+epLiKBN8TaWOBvFgcHQEc3JV0PdUE0AV
COMKVviJ8VzIFdFMcBA5EFgSTa6IoqBxRzrQ9yUNdistq0zDwwDg6Ah+IoplIY90AHajsR7A2jYAyERR
rTi+VfDps32NHOx7KIWCwx/8J05WdGAlnJWacVJ0ZZSSrYi8f2vo1blApoxrs6WgfLi1HsN4DP8PLAd9
42yDG6KAC88Lbun9AIBUWkx5ZnciYzB8DeettfEYDt/0MkVSYDyTdEW5doYNAJff0ZxUheGJ/z59vhKi
8Io360ZjfBW4Lk5Ay4p6ic5dVqSG08uTE1BUrqkExZYUlpaTc+W5pJCRIqsKomnXoVnjyRUpP9kAGZc2
QcKwBFEqhfKchdK7WTN17jxcG1v/28qAHvOYgpJIjenZDlUdZL50idZiHC3Y8s1i/CMcn76DBVt+h89p
muLhUbSgmf6lovK+d+vF5GTydg6LTBSLBDel8PPs7D0s7u7uFshgSfG8/XTvTGtxQgbvJieT+STYBB//
OplNUA+vklHlsX06Md2FMblSdAmMQyYp0ci1pumeSbcnr3g2/LZ+a4/9WandGfjI9I3PPEW1CjyMz0TD
DVnTvXmUYEIX1ZLx6xEyh0M4vpyffZmevp1N3k9O5+7l6dnHYeyez/QNlQ3XTHClCdeepUoHqHe/nmHm
o7ese+MtyxGMJNWVdE4wwBZ4whAA5ELClyRAIhiNQRJ+TVvoZIkBEzIBcYtEyDBtTsinhvyzI2Y5vBK3
9V6AknCWDfOVTidSCpkPI6MPLF6rhceI4FgtzUKUWFE1gobaxrFj/uj+GtIGLz6VQn2GsTlBA0/36BLs
rNTnLUhsciA4Uz4fmqC0N/0vIE8HZLsyjYGUJeXLYf96gobFfRE7DstNE7De0tKErLUriBj8zmi9wP0d
5//bXG8db8i2S7OpT40/T+km6IEQVKkCApxuQmQ1TgxJh003Y/2X9LYyCYhSmzPR8W4ceNI4xHh3NIaD
+rV1Uy1nVBeixnRDEcj1NMErS7OVXSPgrLBrXReNAA7f2KUGRWrpK3JLh7ZcJ1ttSJxgkTsuCshJoWig
npUZ8mi3E7EVWPcEjbUvFPjoeo/Dw8NOZ3N4eDiw4MKeCy57EhrGwDrijsuyuMeAM8FVIO6LyYJGjkkJ
K0CU2pyruKt5u3OyvFhu7O+HC9fIWrbu2CJlwLh2bqMXdle1XjtwKnBFzaFTVLyEoPMyvSNfGvb+NDw8
/hbJlk2NluZjAggbF6VkXOfDCIFh/KOHhiCORs/YercLxHwJY3d4Vfo3wbhnHZk2LIqdUUFPaBvinTb1
JVVXo9qoomVT0WdStIVttRVhozpu73Q96mvlukzLqGMoyosSiOIunHqrextZ8OJ7Vzt6tFpdhHTb6b5W
PRDejYzRIszisCE2DraLKpiwsEY4pN6uVfXGYezb8Ye2iEYdJ4txRaWez9yDgoWWC5z6hJuB7YtVpTRc
UViTgi1TmFUFVbYNhkOY5u1hjMM/qBRIW9EEdeegb5jyRBtWFMjLSqTL1PPBdnnDVHcEWgqq+DfdFr1u
y59ijdynuTUD9evtIKyWtTMMH1IoAVW5NFOd9qwWK7FkOaNyARnhKExwCiKvvRGxay4kjUYQTU8vJrM5
TP9yejabwPR0fmbnHk8paVmQzJDOJucnx2/7iKIRnOJEWTT8ahqTB17rYabvwN2xpG/t3wQoTO5oRiUO
zzZBZmKTgLeibowodifwMAiqtJZNQR/GFptfaZl+wCQYxm0YDjucqdFoBFJscJpj3KRNVON/L7yUN9vv
iLx2LxnXVOYkow+PDx6I394IoYI5TjhXpK0K+CRKrUnhrLWo/AHzdshi380x9XcqxXBNihgODrYmD/a5
7vWOjuDilpU+p8wBsOMlU8GZAMKX9b0Fr4rCJ3M68J0N14wHk0w/lGaisEqi6+q18gZR78fILhkP1mv4
KUElwlL83qUCSl9TeYXOiMw9wYbp7KZJFTQzI4o2KW79h3vGfdke1RvqTG/tCJPe3ivYNqyXraOpg4/D
tLmO+4q4jMqbh1p710igq1ptw9c+GH+tLHoPY/hwfHI5uYBhHCVGh+3aAfAItFD0WQzx/4bpa7WLbX/x
WiSwwPLVWrMRxroWhvEX7wZJlQFGKiU6g6YIAA4PECMSq3FiciNNU3eykfzVGDvm9sGmUgZSpvkeEMW8
boD7G+XS3SV/auX0Tyw/YIAODvxh6xzG3j2xR6CCKG0hZ7qszbZeSE+CtWF9pLds7VjrT50jHY3B3Sgj
ruLfY6XYNW/UPBcGoHYomrRUjP/8TPmPQX/AWeHbA1uS5jP34Eq2FrDgdDM31ds1C1f3wLQKLzlsOT/y
lO2yjszblf2MF/c992RLludUYuBNgFVdd61GS9egeEWfLkwJGIXq+vSR6RvXdbUqkwF9mt0GDZEUG/WN
NYBpk//7ypdZQ8+juHB5dzG7NFaMQMsjq6R3GkoGYVsVhd2aUSjyHWynWP76K7yyUp8sn16iFJuhioGp
IZE03i6jRF2v9O8vmjZMLyia/mh0pqWeQugzz1/T9Ja3p4swp5sPdt16sL9OI4vx2BN3VWE5cFFnbkb3
KeMc25RN83nXOIZleHexteqYVt+H4FToG+zNW7535Qo39U25eP6fV/xaSl6evzueT2wpupiYeWnPgNKq
Mt7ocIDqDi9HR3BsjK0jbQAB9bFOcLlhQqWGB9YlWsbdmvXlZeUqAEsHinZWm8/cQz3HPIGEXQQ0uOV5
vaChfhlg2cr4LMB6Vr/9zii8u9+233+VRFLrxD0g8S8N3M4pelcwbSzt2D+fuQcXy1yK1Quj6Sa/QmS3
C3SMlvVA6i8QzJdbZzOwByVqKplyg+lU11M4Fy60LAfina2qLKNK5VVR3EMuKr40bZDdU5dCb1J/Sn21
/tydUwmgDXAlRNGkV+05zxyPpTsxtqjipgSiKO441n5puNu5WaW0WJk7KWa+yPwv8a53wO/zcGIMr2+8
zUlJ0zQ4J/+BI35hTDzj+0+5uYnhS1ymq1LfJ+jpoAr7eFrBhnSM45KT26pBr5oatEcj6/RRWyxcVdr6
jZkhN4pbk6y5k+zWE1tA92PPbyiAPQUvuFW0oXZxMAkQjnT/N4YoTN/eYUtsUObX1LyZic3eyuWxWGBS
+xGlHtn68VjLlN+dS3qRET48sJTByIaNmtikZtUxTNO+EWN7nHNvrAChtOERm4pqjlVfNJZUafi2peXu
QviwL/NffEX+rZFdt1fmY9LtGEucC/03X/Z6rL6+gdYRNr/FMCfY3XOsUY81KdKhvi9p3Fx35IUg+g/f
jUI3rk2P1qL4/o97KFDa9rL/PseQMK7/tIcD4/rN9/vX9+rI+H4NqyfkV08pUD2lQfWUCpqtaDpnK9qm
Sac2hLGns9C8zSiqL5zMD8F+7onbq7XF2m3Cjma9hD91o9hLNe06chdVx527yJ5jwpQ/y4BL9izdLtnz
lLtkz9Pukj1Pva3Y91JdbIc/oGtdIm5/+27hYIRDGKiqNL9O1AgsiEfmt0Wv55G9I3UF53HwzwAAAP//
aDG/E+EoAAA=
`,
	},

	"/templates/default/meta_test.tmpl": {
		local:   "templates/default/meta_test.tmpl",
		size:    6967,
		modtime: 1531192126,
		compressed: `
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
dTcbAAA=
`,
	},

	"/templates/default/scan_type_map.json": {
		local:   "templates/default/scan_type_map.json",
		size:    622,
		modtime: 1528164482,
		compressed: `
H4sIAAAAAAAC/3zRv2rDMBDH8d1PITQbg1sjiscOBc9NJpEhgSRcUE4QS1PIuwf9udNl8fi1P/yG07NT
Sl+cP4bvLz0rpSxXrzRG54a/2oeerZmkNdOnNVO1J+9dhtnmIviboijA8NNULlJLiqKiYLYWsT00BxhG
w66UmBuN2CNoqeQgS0C6TV0Ut1mwXSYKaKnkIktAumBdFBdcsN0vCmip5CLLAPdzu2GqYZc+Ec5RHwUC
SWX1Gh6AV3b/JYu8rR7b6Jas/+ZN2b26dwAAAP//G8mEhG4CAAA=
`,
	},

	"/templates/default/stmt.tmpl": {
		local:   "templates/default/stmt.tmpl",
		size:    8669,
		modtime: 1531214909,
		compressed: `
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
AP//2cLIaN0hAAA=
`,
	},

	"/templates/default/table.tmpl": {
		local:   "templates/default/table.tmpl",
		size:    8819,
		modtime: 1531276872,
		compressed: `
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
`,
	},

	"/templates/default/test.tmpl": {
		local:   "templates/default/test.tmpl",
		size:    2130,
		modtime: 1529627540,
		compressed: `
H4sIAAAAAAAC/7RU32/TMBB+jv+KIxKVXZWO3N4m9QEBDzwwKpjGwzQhz3U2a6ljORfKVOV/R3YSmm3p
BGPdw+qzv/vx3d0XJ9WtvNaw3cJ82Z5P5VpD0zBm1q70BJwlab6mlAnGjo7grKIMTAWkK4IzeVXor+UG
NoZugDblG1UW9dqC82Yt/R3c6rs5ozunW7+KfK0ItixR0TD2miUOwVg6Rpa4rD/J/tT0SXE8aVnTeDIc
T6ZwFzhCqaJs2QY4l0WtB267ctzA66f0oSc/dnUM/hbAp4Gp4NYUYoj6buimy/MEaiQWdijBWF5bBZw8
tN5gfy29/qak5avQmOnFpbGkfS6V3jYiUJjGhwVI57Rd8WjOYEJ+rrL212H329kyE4HlSKqyophLgPa+
9CG811R7C9YUg86Ejn7WJGEBp3oTmQWTsyRJw1s6Y0lycdlOZJuqLJ1B6jD+j2eZpU3AfHHUdex93KqK
dwCHqegA3Uvo7gedy7ogvovSg97VVH6yqsXy/mW0pbtyBUz/GAOuPbuxJp3Lwqy4gKuyLIYuHl4t+iY9
9GmLiqvHTdgyAYMhhijVxpC6ARM3WVYa3p6wZBd7rrLuPrt/77C7xwf3Pf74/r3MWLJqexgenLRG8XxN
849h3DlPX6+CBoPiyhy8tNc6nYERgiXNfmbLMtJ5DrfJPnKTfewm++hNDsBv+NXgj5iZPMx9Eece7KFW
kubeOg0DBaTLTto5hfV12Bo4GysDX+YjoFDsCf0PoscnRI+jolcYhf5YiPh3QsRRIeIzhIiHFKLCF1w8
PLSw/rPa3wEAAP//N0x8k1IIAAA=
`,
	},

	"/": {
		isDir: true,
		local: "",
	},

	"/templates": {
		isDir: true,
		local: "templates",
	},

	"/templates/default": {
		isDir: true,
		local: "templates/default",
	},
}
