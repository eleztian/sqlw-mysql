// Code generated by "esc -o templates.go templates"; DO NOT EDIT.

package main

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"io/ioutil"
	"net/http"
	"os"
	"path"
	"sync"
	"time"
)

type _escLocalFS struct{}

var _escLocal _escLocalFS

type _escStaticFS struct{}

var _escStatic _escStaticFS

type _escDirectory struct {
	fs   http.FileSystem
	name string
}

type _escFile struct {
	compressed string
	size       int64
	modtime    int64
	local      string
	isDir      bool

	once sync.Once
	data []byte
	name string
}

func (_escLocalFS) Open(name string) (http.File, error) {
	f, present := _escData[path.Clean(name)]
	if !present {
		return nil, os.ErrNotExist
	}
	return os.Open(f.local)
}

func (_escStaticFS) prepare(name string) (*_escFile, error) {
	f, present := _escData[path.Clean(name)]
	if !present {
		return nil, os.ErrNotExist
	}
	var err error
	f.once.Do(func() {
		f.name = path.Base(name)
		if f.size == 0 {
			return
		}
		var gr *gzip.Reader
		b64 := base64.NewDecoder(base64.StdEncoding, bytes.NewBufferString(f.compressed))
		gr, err = gzip.NewReader(b64)
		if err != nil {
			return
		}
		f.data, err = ioutil.ReadAll(gr)
	})
	if err != nil {
		return nil, err
	}
	return f, nil
}

func (fs _escStaticFS) Open(name string) (http.File, error) {
	f, err := fs.prepare(name)
	if err != nil {
		return nil, err
	}
	return f.File()
}

func (dir _escDirectory) Open(name string) (http.File, error) {
	return dir.fs.Open(dir.name + name)
}

func (f *_escFile) File() (http.File, error) {
	type httpFile struct {
		*bytes.Reader
		*_escFile
	}
	return &httpFile{
		Reader:   bytes.NewReader(f.data),
		_escFile: f,
	}, nil
}

func (f *_escFile) Close() error {
	return nil
}

func (f *_escFile) Readdir(count int) ([]os.FileInfo, error) {
	return nil, nil
}

func (f *_escFile) Stat() (os.FileInfo, error) {
	return f, nil
}

func (f *_escFile) Name() string {
	return f.name
}

func (f *_escFile) Size() int64 {
	return f.size
}

func (f *_escFile) Mode() os.FileMode {
	return 0
}

func (f *_escFile) ModTime() time.Time {
	return time.Unix(f.modtime, 0)
}

func (f *_escFile) IsDir() bool {
	return f.isDir
}

func (f *_escFile) Sys() interface{} {
	return f
}

// FS returns a http.Filesystem for the embedded assets. If useLocal is true,
// the filesystem's contents are instead used.
func FS(useLocal bool) http.FileSystem {
	if useLocal {
		return _escLocal
	}
	return _escStatic
}

// Dir returns a http.Filesystem for the embedded assets on a given prefix dir.
// If useLocal is true, the filesystem's contents are instead used.
func Dir(useLocal bool, name string) http.FileSystem {
	if useLocal {
		return _escDirectory{fs: _escLocal, name: name}
	}
	return _escDirectory{fs: _escStatic, name: name}
}

// FSByte returns the named file from the embedded assets. If useLocal is
// true, the filesystem's contents are instead used.
func FSByte(useLocal bool, name string) ([]byte, error) {
	if useLocal {
		f, err := _escLocal.Open(name)
		if err != nil {
			return nil, err
		}
		b, err := ioutil.ReadAll(f)
		_ = f.Close()
		return b, err
	}
	f, err := _escStatic.prepare(name)
	if err != nil {
		return nil, err
	}
	return f.data, nil
}

// FSMustByte is the same as FSByte, but panics if name is not present.
func FSMustByte(useLocal bool, name string) []byte {
	b, err := FSByte(useLocal, name)
	if err != nil {
		panic(err)
	}
	return b
}

// FSString is the string version of FSByte.
func FSString(useLocal bool, name string) (string, error) {
	b, err := FSByte(useLocal, name)
	return string(b), err
}

// FSMustString is the string version of FSMustByte.
func FSMustString(useLocal bool, name string) string {
	return string(FSMustByte(useLocal, name))
}

var _escData = map[string]*_escFile{

	"/templates/default/group.tmpl": {
		local:   "templates/default/group.tmpl",
		size:    830,
		modtime: 1530326882,
		compressed: `
H4sIAAAAAAAC/3RSTWvcMBC961e83UOQycZOr023kEIOhVJCU9JDyEG15XSw9cFYZr1s/N+LLHs/DrkY
S/PmvXlv5FXZqDeNwwH5Y/r/qYzGOApBxjsOkAJY1yasRSZE3dsSb+x6/20vOy7x1FKpeYNOt7oMjhER
kmzQXKtSH8YMv9XfVv9yuz8U/j0yGcX7DQJ3x96JbzlmOAgBUB0huR1+aCszrLa4xfs75IxdbWGpxdXV
3HwBjBQA4JWlUtYm5A/Mjmu5fhi8LgO08WGPLup16ywTwBg1PZPp8HkLoxotjfIvZz5eyYYMRYHZwrNq
e42bryBb6QFumrdI0wigdgyKXLd3IHxBx+Uy4x3o+jq5BChoE2Gp/j1oIymbKoGn+zlXGYGpMH2KAk8N
edi+bcFu1+WJrsYqcP6sWqrkkgNQOhvI9no6jknZR/rA+bkfmRSoGjZwTQRMmbz41yO7a46sRYF7WL27
jKR2va3yGZJ2eO+9tpUMnM3XVONykQslTvucmyy1S9e4dFcDthfP4waf5toyL7YRdu73Q82jYkq/GrJc
zm/xNMYp/oluFGIU4n8AAAD//8prifY+AwAA
`,
	},

	"/templates/default/headnote": {
		local:   "templates/default/headnote",
		size:    103,
		modtime: 1529743910,
		compressed: `
H4sIAAAAAAAC/0TKsRHCMAwF0J4pfgcUWD01I7CAQ4QlzpEJki6X7SnTPyI8RR1v7Qx11IyBxsa/Gjxj
2uFr327L7mvHRSK+fidqGpJTeY2FJKu1T9rGRge9FuAx7BzgWaOc/gEAAP//80UxpWcAAAA=
`,
	},

	"/templates/default/intf.tmpl": {
		local:   "templates/default/intf.tmpl",
		size:    1931,
		modtime: 1530328445,
		compressed: `
H4sIAAAAAAAC/6SUTW/bPAzH7/4URC+1izzO8xWGYocCXZG1W3codlBkOhYqi65EzwmCfPdBL/FLXw5D
b7ZI/vgnKaoT8lnsEI5HKDfx+060CKdTlqm2I8uQZwAXkgzjni/8dyVYbIXDtXvRF1mRZes1fN2jRAvK
ATcIktqWDCjDaGshEZgA9yh7RhDw0qM9wKC4oZ7BIvfWKLMDYQ5gaSgzPnQ4EkfGMYNweB2l5JL3kGSV
6WyV2I6tMrsVCLtzUJblCDmeCsjdiy7v0fWaV4DWki2yUyjiuw/+tyom9ZaG3BVJ/EhaqA+nn5Z/FfTT
4Eb1iXxPw2fhZ3ZqyDXpvjUPUhiDFix2Fh0adiBAktYoWZEBqv1f3xrfNsEghYEtggthle8BQW2pBTEb
7xK97NN6DWa/seitILoOTeVAaD2lIajQMdRkYxpldmUGU1QezFdPv+fVZSOaHAd22zv2UqXQGisQNeME
DFkIHLUIuGcroLMk0Tk3ZUugvIijSG37IbYa72lYdoz96aWb9WD0W5a/aE0SHVy/IYt04+INPSNbb1Cm
JtsKPxKvbozIC7gafxLuUWhVTSjbI6gauFHOX34Bf4I94L1eyLHclWCI4e7n7W3h+QGRF7Al0okahT8K
3eNCpvqPmzQ7T+6xHKsMzrnyHShgNqwFcUPB8hHz0kEXPSZuCnmXvBzSL8XNxqpWhG0e5+Wrpjq1wL9V
0CWnZzy8mt8csRzl2SOVk5zedmjGjh0Kuf04wm2JV6A5x2CVnJTzj1QnbFC5TbHOB8xT5csGxPoftJKv
lvq8bIHmvD0Vmnzf2dJbNItCNJodN1H9yIDoGGWMW3jD2L4dqfKni3BQ4BrqdeU31U9CGXj6f3VmFisg
btAOyvlnuRNGSRiU1t7dCuWwigp8vo9vmtl/CbVP742JWpjmWm7qeKocGKVX3mTGfcG240O0T4oj7ywi
JskjY/42nbK/AQAA//+OXtwViwcAAA==
`,
	},

	"/templates/default/manifest.json": {
		local:   "templates/default/manifest.json",
		size:    258,
		modtime: 1529741733,
		compressed: `
H4sIAAAAAAAC/2yNSwoCMRBE9zlF0ethDjBXEQlxbH9MPphyITJ3l7TgJ7ireq+SfjhA6hyS572oj6HI
1IHxUnOSoQ1PGvYpU9vmnc0wlkUmtO9aC7vFRhZGk8NLVUbaCUb+COUsEzZWADknHr49IFEZOnS85lvp
GLXyz0v/4Ya3Dljd6p4BAAD//wb8EYkCAQAA
`,
	},

	"/templates/default/meta.tmpl": {
		local:   "templates/default/meta.tmpl",
		size:    11027,
		modtime: 1530329866,
		compressed: `
H4sIAAAAAAAC/+xae2/byBH/X59iQiA+8krTl2txKFToDj5Hh6rw2T5bToAGQURTS2thapfZXVp2ff7u
xeyDXFLUw0mLtkDzR0xxh/Oe38xQKtPsLr0l8PQEyYW5PkuXBJ6fBwO6LLlQEA4AgowzRR5UgNf50vyV
SlB2K/W1oksSDPDqlpd3twllR/e8SBUtiCLZ4ohVRZHc/xDspDjKOLsnQgWDaDA4OoJpelOQX4lKAVVI
KZOwxE+U5VwsU0U5A55DCvNUpTepJKDwiWSgHkviPS2VqDIFTwOAoyP4OZU083kkAzAPausBjG0DgIwX
1ZLhXQkfPprbyMHch5JLOPzRfWLpkgyMhPNSUZYWXRmloMtUPJ5oennBkSllSj9SEBaunUcwGsF3QHNQ
C2sbLFIJjDtecEceBwBppfiEZeZJZAyar+a8djYaweGbXqZICpRlgiwJU9awAeDxW5KnVaF54r8PH284
L5zizbnWGG95rotiUKIiTqJ1lxGp4Oz69BQkEfdEgKRzAnPDybryQhDI0iKrilSRrkOzxpPLtPxgAqRd
2gQJw+JFqeTSceZSbWZN5YX1cG1s/W8tA3rMoxLKVChMz3ao6iCzuU20FuNgRudvZqOf4PjsLczo/Hu8
TpIEi0eSgmTqt4qIx95Hr8an45MpzDJezGJ8KIFfLs9/hdnDw8MMGcwJ1tvPj9a0Fidk8HZ8Op6OvYfg
/V/Hl2PUw6mkVXluVyemO9cmV5LMgTLIBEkVcq1pujVpn8krloXf1ndN2Z+XytbAe6oWLvMkUdLzMF6n
ChbpPdmaRzEmdFHNKbsdInM4hOPr6fmnydnJ5fjX8dnU3jw7fx9G9vpcLYhouGacSZUy5VjKZIB69+vp
Zz56y7g3WrMcwUgQVQnrBA1snic0AUDOBXyKPSSC4QhEym5JC50MMWBCxsDvkAgZJk2FfGjIP1pimsMr
flc/C1CmjGZhvlTJWAgu8jDQ+sDstZw5jPDKaq4PgtiIqhHU1zaKLPNn+1eTNnjxoeTyI4x0BQ0c3bNN
sPNSXbQgsckBr6ZcPjRBaT/0/4DsDsh6ZxpBWpaEzcP+8xgNi/oiduy3myZgva2lCVnrKS9i8JXReoH7
O87/t7neOF6Trbdm3Z8af56RlTcDIagSCSkwsvKRVTvRJw2bacb4L+4dZWLgpdI10fFu5HlSO0R7dziC
g/q2cVMtZ1g3osZ0TeHJdTTeLUOzll1DYLQwZ10XDQEO35ijBkVq6cv0joSmXcdrY0gUY5M7LgrI00IS
Tz0j0+fRHiciI7CeCRprXyjw2c4eh4eHncnm8PBwYMCF7gsuWxIaRkA74o7LsnjEgFPOpCfuk86CRo5O
CSOAl0rXVdTVvD05GV401/b3w4UdZA1bW7ZI6TGundvohdNVrdcGnPJcUXPoNBUnwZu89OzI5pq9q4an
5y+RbNjUaKk/xoCwcVUKylQeBggMo58cNHhx1HpGxrtdIGZzGNnilcnfOGWOdaDHsCCyRnkzoRmIN9rU
l1RdjWqjipZNRZ9JwRq21Vb4g+qo/aSdUV9LO2UaRh1DUV4QQxB14dRZ3TvIghPfe9rRozXqIqSbSfe1
7IHwbmS0Fn4W+wOxdrA5lN6GhT3CIvV6r6ofDCM3jj+1RTTqWFmUSSLU9NJeSJgpMcOtj9sd2NxYVlLB
DYH7tKDzBC6rgkgzBsMhTPL2MsbgH0RwpK1IjLozUAsqHdGKFgXyMhLJPHF8cFxeUdldgeacSPZNd0Sv
x/KdrCe5sQGV6x0fjIq1JzSTtJAcqnKuVzplPe5Iwkw9gH2bkZyYvzEQGD+QjAhcU00oLvkqAoJtH54G
XvtToumUYWRA75USyTv0bhi18c0fHSZagSEIvsI1iTIdj6AG1t66LRfr91Jxa29SpojI04w8PT85hDtZ
cC69BYlby5NWa9lZ/vdpYa01cPcOEyKkkRuTqPw7ETy8T4sIDg7WRnr6sR6ijo7g6o6WLl46s8zeRqWX
bJCyef1CgFVF4bIkGbiRgSnKvBWhH6MyXhgl0XX1WblAOPkpMEfag/UZfopRCb/HneC+p98YfUboQCX0
BTolCJpeh0Jbne1zH9JMzq7Gl1OYnE3PDdKEEbw7Pr0eX0EYBesIB/AMpJDkZTzx/4bvaxn14Fgfys5i
mCHOts6MxxCAfbf85pwhiNQVTIRAl5AE68eWE5ZYbJSOta+TJLGVguSvRjjatQuFCOFJmeRbCh7zpEGY
b6RNH5tMiZHTP1r/iGE6OHDJ20nu3mciV9FFKpUp4cm8Ntt4ITn1zsK6RNZs7VjrstiSDkdgX30iLOHf
YynpLWvUvOC64DcoGrdUjP6yp/xnr5ExWrg+ZuBzemkvbG9RHGaMrKa6zdiudvMIVEl/Gzd958hRtvsP
Mm+3oHNWPPa80JnTPCcCA68DLOsGYTSaW1x3iu7G9Ri0QjW8v6dqYceDFtJrECXZnde5BV/Jb4wBVOn8
39YO9Bl6HsX5x5ubw7W2YghKHBklndNQMnDTUyWOFVqhwI1anebz++/wykjd2Y6cRMFXoYyAyjAVJFpv
S6m8Xaqvb0ImTC9oQq40OmN9T2NxmefeJ/S2i91NjZHVO3NuPNjf95DFaOSIu6rQHBivMzcj25Sxjm3a
kP68aW/Atra5eRl19EzqQnDG1QKHyJbvbdPCh/rWMaz//VpgS8nri7fH07FpQldjPdhvmaRbXcYZ7U/6
3Skb92dtbB1pDQioj3GCzQ0dKhkeGJcoEXV71qeXtSsPLC0omqViemkv6oF7BxJ2EVDjluP1gnn0ZYBl
OuNegLXX/PpWK7x5fjVf1JSpIMaJW0DiXxq4jevepmCaWJr9dHppL2wsc8GXL4ym3VIKnt3N0DFK1JuT
23T1tzDnl2AKJWg6mXRrjqrXRcZtaGkOqXO2rLKMSJlXRfEIOa/YXI9B5pm6FTqT+lPqs/Hn5pyKAW2A
G86LJr1qzznmWJa2YkxTxYdiCIKo41jz7dZm52aVVHypX55Q/Y3b/4h3nQO+zsOxNrx+NasrJUkSr07+
AyV+pU08Z9urXL8yYHM8JstSPcboaa8Lu3gawZp0hEuTldvqQa+aHrRFI+P0YVss3FTK+I3qpTGIWpuh
fnnW7SemgW7Hni9ogD0Nz3v9ZUJt46ATwN/q/jCCwE/f3mWLr1Dm50TfueSrrZ3LYTHHpHYrSr2y9eOx
Egl7uBDkKktZeGAovZUNBzW+SvSpZZgkfSvG+jpn7xgBXCrNIxp0wEJ20ULuBReygxcwc1U3A1lQHMC+
GkBaxS/3qv7Oyz3MKwlXqI/4Ogj4L0pIWfdkm5Zfv/wDzElOhOaenBRckvDLshlXDM3kDBVygKeETNiD
GSVDRu1rIiUMZOLZRJFlaC5PCQsjOIQ3URLW7wMHVmst2W3/H74bfvfRsuoros6Or/XaXUg9u3qHUaei
9ubRXfifBybF+2BxTqSCb1sO3jyRPm1rQS/+UuVbLbvec/THuLu6lVza11POiua9JLQKSf96R9eRXFGV
LeAe9bhPiyRUjyUx2mepJJAXPFV//H7oZ+i9XpZaFD/8aQsFSls/dt8AahLK1J+3cKBMvflh+/lWHSnb
rmG1Q361S4FqlwbVLhUUXZJkSpekTZNMTAgjR2cAcp2Rfg2rKfRPB3/pidurezP0rBN2NOsl/LkbxV6q
SdeRm6g67txEto8JE7aXAdd0L92u6X7KXdP9tLum+6m3Fvteqqv18Ht09ksCc7z+ew0DB0M44wpkVerf
syoEFsQj/Wu019PAvPy3k9/z4J8BAAD//55NYpITKwAA
`,
	},

	"/templates/default/meta_test.tmpl": {
		local:   "templates/default/meta_test.tmpl",
		size:    6246,
		modtime: 1529627530,
		compressed: `
H4sIAAAAAAAC/8xYX2/iuhJ/Tj7FbB5WySobGlqhVaUKsSW9t1KX9lK6K93N6mCCoVGdmHWc/jmI735k
OymBGCjbHqkvwYxnJjPz+3lsZ4aiOzTFMJ+Dd6XGPZRgWCxMM05mlHGwTcOKaMrxI7dMw+I443E6lcM4
wZZpGtY05rf5yIto0sg4wzy6ZQ2pN3lqoCzDTFpO6exu6sVpo9sZdD53L//TmNLP2W+S0OjOu/dXVO4p
QTwmmOPotpHmhHj3Lct0THOSpxEMcMYHaETwN8yRzeFTEZQ3cGBumoZ6JxyfgBp5Pfxgc8c0jblpGAnm
SMzZnwYZ9x07jYnjLd05plE48ILfOSK2xTPuWy4IO48LPVGimtrPXxlncTqdW5HQtmZN+ZRj5FuLwkFE
SZ6kwkOmcRGnfN50wS+1ZyxOEHs6lUbZFa3bHBaaKOf0PI2Upk7x568RpWQ+QSTDLhQ/nOXFs3zjLcq6
eIJywmseEjT7qXKUcYo8j+FApXoMvsr2GJoq4WM4XM052x3VMpwiwtJDnF2pStTRGc784UkbOr0uDGfN
4UnbWq9dOq5bXQcXwekAhpE/dKWdeMox8odw1r/8BkOB+7D0lmGCI/6/HOti6AYXwSComsGP/wb9ADYG
N8aC3F+firRKvwsdR5sv42hzf45GzR28vMCprSeiCwc195/9V5DxNQSMJAH3pttLKfYiRr2IKDvhX1Ra
3HkqTAf9PTqcMR65IBqqC5gxMV82WKHgmEY8kRMfTiCNCQiqce8McURszJiMwBjjCWYwHnmnhGbYFm2z
0YAOIfA3ZhTuEclx5hU8Fa6DxxmOePCII9s6710H/QGc9waX5UoIQ3u5zMLQge+di5vgWsjDsO1CGLbD
0LEczzQM40fMbztsmslSHZQyQvqY5yzt4ywn3K7kVEj8Qxd8R9Sby6xFZ58vluXv0YAxyuy4LGmxo3lf
UXQ3ZTRPx7bjgqjeR84cp25ZyRTxmKbZD8zEYrSdGsry5ZF/DCKHWVNSdObLH+Qfgy/6ImfFam80IHic
kTjiIFYNxGnEcIJTrgr9p3WutjN9zZePDdUX+5ALh6/DQNiK3H1XjppiexAjUYhDMXo3IDUVSL4CqYJR
dUnezMaI43eyJHsUilYHnEIuQyv4srYKUvwwkBLO6kXLy5y2ltuFj9KLs+TtZYqLALa9fxX3Zy7Uw5L/
vMiHE7DQKLJ0tL+56nYGQcn460Dt4Cdh2K5uuOLv85Ybhu0au4V7ye7mi9l9UJL71dXbh7Sy1lUCduXG
8R4I+HKYayhuPy7tQu9NYBuXdXzTHrPeLq7fDVqNBshDBoyeoDjGeH+IofSzxwn61djSh2wFWfF/123L
8TrjcZ8+2Gq+3Ms0eKrz2u4FLA+L2/YR+aKtO4kWBniI+S0Qkdw7AATOLvuguuw7wkacuHfho26NlvWW
EEV5xmkCEU3HsVjr+t31DaCIqlAgf/hBu23J8A//PQyOXotBca+yZD7VbNrytqnC3x+fowo+Kxek7P+Y
0b0+AE0og79cEPqnKMNChaF0ikEWLI+47KjfEQEAiFOO2QRFWMKs3gbiAmkaC6E2nxCK+GHTPnDKjyhV
qe88XzGfxa0jnXLrqKa8/CCiBCsfRYQgTvmXNV9StOYoTrnfquv5LY1iLRMlqyvWslCyNcVcE2KuizHX
BZlro8x1YebaOHNdoLk2Uh4n2BvECZ4vVmouxD36YK9qixvDUskSnK3Myq+VZ4oCq+6qM2eMJutRLOdb
R5ssW0cbLb9SSjRmQixt1AZWtztP+ReNnRBvfNe5wEZv5Le2WWlrIuXbrLT1kPKNVjexPi0p32qlTUxN
bLXTpqYmttppk1MTG+3qXH0WS5slczXG12pnqJurCenAsqqGC9kVV5p22UE91RZdiItmXMq/I+IU9+d/
AgAA//9wgb16ZhgAAA==
`,
	},

	"/templates/default/scan_type_map.json": {
		local:   "templates/default/scan_type_map.json",
		size:    622,
		modtime: 1528164482,
		compressed: `
H4sIAAAAAAAC/3zRv2rDMBDH8d1PITQbg1sjiscOBc9NJpEhgSRcUE4QS1PIuwf9udNl8fi1P/yG07NT
Sl+cP4bvLz0rpSxXrzRG54a/2oeerZmkNdOnNVO1J+9dhtnmIviboijA8NNULlJLiqKiYLYWsT00BxhG
w66UmBuN2CNoqeQgS0C6TV0Ut1mwXSYKaKnkIktAumBdFBdcsN0vCmip5CLLAPdzu2GqYZc+Ec5RHwUC
SWX1Gh6AV3b/JYu8rR7b6Jas/+ZN2b26dwAAAP//G8mEhG4CAAA=
`,
	},

	"/templates/default/stmt.tmpl": {
		local:   "templates/default/stmt.tmpl",
		size:    8676,
		modtime: 1530329395,
		compressed: `
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
798BAAD//5V9NJHkIQAA
`,
	},

	"/templates/default/table.tmpl": {
		local:   "templates/default/table.tmpl",
		size:    9491,
		modtime: 1530337627,
		compressed: `
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
yx6GQwpx+4Kwf1f4fwAAAP//lJ9/KxMlAAA=
`,
	},

	"/templates/default/test.tmpl": {
		local:   "templates/default/test.tmpl",
		size:    2130,
		modtime: 1529627540,
		compressed: `
H4sIAAAAAAAC/7RU32/TMBB+jv+KIxKVXZWO3N4m9QEBDzwwKpjGwzQhz3U2a6ljORfKVOV/R3YSmm3p
BGPdw+qzv/vx3d0XJ9WtvNaw3cJ82Z5P5VpD0zBm1q70BJwlab6mlAnGjo7grKIMTAWkK4IzeVXor+UG
NoZugDblG1UW9dqC82Yt/R3c6rs5ozunW7+KfK0ItixR0TD2miUOwVg6Rpa4rD/J/tT0SXE8aVnTeDIc
T6ZwFzhCqaJs2QY4l0WtB267ctzA66f0oSc/dnUM/hbAp4Gp4NYUYoj6buimy/MEaiQWdijBWF5bBZw8
tN5gfy29/qak5avQmOnFpbGkfS6V3jYiUJjGhwVI57Rd8WjOYEJ+rrL212H329kyE4HlSKqyophLgPa+
9CG811R7C9YUg86Ejn7WJGEBp3oTmQWTsyRJw1s6Y0lycdlOZJuqLJ1B6jD+j2eZpU3AfHHUdex93KqK
dwCHqegA3Uvo7gedy7ogvovSg97VVH6yqsXy/mW0pbtyBUz/GAOuPbuxJp3Lwqy4gKuyLIYuHl4t+iY9
9GmLiqvHTdgyAYMhhijVxpC6ARM3WVYa3p6wZBd7rrLuPrt/77C7xwf3Pf74/r3MWLJqexgenLRG8XxN
849h3DlPX6+CBoPiyhy8tNc6nYERgiXNfmbLMtJ5DrfJPnKTfewm++hNDsBv+NXgj5iZPMx9Eece7KFW
kubeOg0DBaTLTto5hfV12Bo4GysDX+YjoFDsCf0PoscnRI+jolcYhf5YiPh3QsRRIeIzhIiHFKLCF1w8
PLSw/rPa3wEAAP//N0x8k1IIAAA=
`,
	},

	"/": {
		isDir: true,
		local: "",
	},

	"/templates": {
		isDir: true,
		local: "templates",
	},

	"/templates/default": {
		isDir: true,
		local: "templates/default",
	},
}
